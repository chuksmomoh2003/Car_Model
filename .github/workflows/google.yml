# This workflow will build a docker container, publish it to Google Container
# Registry, and deploy it to GKE when there is a push to the "main"
# branch.
#
# To configure this workflow:
#
# 1. Enable the following Google Cloud APIs:
#
#    - Artifact Registry (artifactregistry.googleapis.com)
#    - Google Kubernetes Engine (container.googleapis.com)
#    - IAM Credentials API (iamcredentials.googleapis.com)
#
#    You can learn more about enabling APIs at
#    https://support.google.com/googleapi/answer/6158841.
#
# 2. Ensure that your repository contains the necessary configuration for your
#    Google Kubernetes Engine cluster, including deployment.yml,
#    kustomization.yml, service.yml, etc.
#
# 3. Create and configure a Workload Identity Provider for GitHub:
#    https://github.com/google-github-actions/auth#preferred-direct-workload-identity-federation.
#
#    Depending on how you authenticate, you will need to grant an IAM principal
#    permissions on Google Cloud:
#
#    - Artifact Registry Administrator (roles/artifactregistry.admin)
#    - Kubernetes Engine Developer (roles/container.developer)
#
#    You can learn more about setting IAM permissions at
#    https://cloud.google.com/iam/docs/manage-access-other-resources
#
# 5. Change the values in the "env" block to match your values.


name: 'Build and Deploy to GKE'

on:
  push:
    branches:
      - 'main'

env:
  PROJECT_ID: 'hypnotic-guard-436705-n3'  # Your Google Cloud project ID
  GAR_LOCATION: 'us-central1'  # Your region
  GKE_CLUSTER: 'car-price-predictor'  # Your GKE cluster name
  GKE_REGION: 'us-central1'  # Your cluster region
  DEPLOYMENT_NAME: 'car-price-predictor-deployment'  # Your deployment name
  REPOSITORY: 'car-price'  # Artifact Registry repository name
  IMAGE: 'car-price'
  SERVICE_ACCOUNT_EMAIL: 'github-actions-sa@hypnotic-guard-436705-n3.iam.gserviceaccount.com'

jobs:
  setup-build-publish-deploy:
    name: 'Setup, Build, Publish, and Deploy'
    runs-on: 'ubuntu-latest'
    environment: 'production'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'

      # Authenticate with Workload Identity Federation
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/376773430110/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: '${{ env.SERVICE_ACCOUNT_EMAIL }}'

      # Authenticate Docker to Google Artifact Registry
      - name: 'Docker Auth'
        uses: 'docker/login-action@v3'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      # Build and push Docker image
      - name: 'Build and push Docker container'
        run: |-
          DOCKER_TAG="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${GITHUB_SHA}"

          docker build --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"

      # Get GKE credentials
      - name: 'Set up GKE credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          location: '${{ env.GKE_REGION }}'

      # Deploy to GKE
      - name: 'Deploy to GKE'
        run: |-
          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} car-price-container=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${GITHUB_SHA}
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}

